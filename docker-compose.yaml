version: '3'

services:

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
    deploy:
      replicas: 1
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      monitoring:
        ipv4_address: 172.18.0.2

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    deploy:
      replicas: 1
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alertmanager/alert.rules/alerts.rules.yml:/alertmanager/alert.rules/alerts.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=365d'
    networks:
      monitoring:
        ipv4_address: 172.18.0.3

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    deploy:
      replicas: 1
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'
    networks:
      monitoring:
        ipv4_address: 172.18.0.4

  blackbox:
    image: prom/blackbox-exporter
    container_name: blackbox_exporter
    deploy:
      replicas: 1
    volumes:
      - ./blackbox:/config
    networks:
      monitoring:
        ipv4_address: 172.18.0.5

  caddy:
    container_name: caddy
    image: caddy
    restart: unless-stopped
    deploy:
      replicas: 1
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
      - 2019:2019 # Metrics
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      # - feed-volume:/www/feed:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      monitoring:
        ipv4_address: 172.18.0.6
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cors:
    container_name: cors
    image: cors
    restart: unless-stopped
    deploy:
      replicas: 1
    build:
      context: ./cors
      dockerfile: ./dockerfile
    volumes:
      - cors-volume:/apps/cors
    networks:
      monitoring:
        ipv4_address: 172.18.0.7

  loki:
    image: grafana/loki
    container_name: loki
    restart: unless-stopped
    deploy:
      replicas: 1
    user: "root"
    command: -config.file=/etc/loki/loki.yaml
    volumes:
      - ./loki/loki.yaml:/etc/loki/loki.yaml
      - loki-data:/tmp/loki
    networks:
      monitoring:
        ipv4_address: 172.18.0.8

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    restart: unless-stopped
    deploy:
      replicas: 1
    volumes:
      - ./opentelemetry/otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      # - 1888:1888 # pprof extension
      # - 8888:8888 # Prometheus metrics exposed by the Collector
      # - 8889:8889 # Prometheus exporter metrics
      # - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      # - 55679:55679 # zpages extension
    networks:
      monitoring:
        ipv4_address: 172.18.0.9

  openvpn_exporter:
    image: kumina/openvpn-exporter
    container_name: openvpn_exporter
    restart: unless-stopped
    deploy:
      replicas: 1
    command:
      - '-openvpn.status_paths'
      - '/etc/openvpn_exporter/server.status'
    volumes:
      - /var/log/openvpn/status.log:/etc/openvpn_exporter/server.status
    networks:
      monitoring:
        ipv4_address: 172.18.0.10

networks:
  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  prometheus-data:
  grafana-data:
  caddy_data:
  caddy_config:
  cors-volume:
  loki-data:
